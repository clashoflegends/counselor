<<<<<<< HEAD
annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
application.desc=This game is a computer moderated turn based multiplayer board game. It has strong elements from war games with a nice economical side to it. Also, it has some small pieces of RPG mixed in the bunch.\n\nThe general mechanics are quite simple. For each turn you receive a result turn with all available information. Then you spend some time thinking and communicating with your allies (if any). Then you input your commands and send them to the moderator. The moderator (or Judge) will process all commands according to the scenario turn sequencing and then distribute the results. Then we play another turn until a winner is declared or the time limit is reached.\n\nThe goal is that you should spend 10-20 minutes per week preparing you commands, after the initial learning curve is done. Some people may want to run the turns more often, but I do not recommend it for beginners.\n\nThe idea is to have a client program (the Counselor) to help both new and experienced players and to leverage knowledge. From the Counselor, all information will be made available. You can review your generals and wizards. You can check upon your assassins and your enemies' rogues if they are double agents.\n\nAn easy to view map will help you see all theatre of operations in a glance. You review the information and give your commands at your own pace as we are all busy people.\n\nThe game is quite stable and recently translated into English. It is far from finished, but we passed the initial beta and I'm looking for more players.\n\nAre you interested in having some fun while crushing your enemies?
application.homepage=https://sites.google.com/site/clashlegends/
application.title=PbmCounselor
application.vendor=John Moura
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/PbmCounselor.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.apache-mime4j-0.6.jar=lib/apache-mime4j-0.6.jar
file.reference.commons-logging-1.0.4.jar=lib/commons-logging-1.0.4.jar
file.reference.httpclient-4.0.1.jar=lib/httpclient-4.0.1.jar
file.reference.httpcore-4.0.1.jar=lib/httpcore-4.0.1.jar
file.reference.httpmime-4.0.1.jar=lib/httpmime-4.0.1.jar
file.reference.icu4j-3_6.jar=lib/icu4j-3_6.jar
file.reference.log4j-1.2.13.jar=lib/log4j-1.2.13.jar
file.reference.mailapi.jar=lib/mailapi.jar
file.reference.PbmCommons.jar=lib/PbmCommons.jar
file.reference.Projetos-PbmClient=.
file.reference.smtp.jar=lib/smtp.jar
file.reference.xpp3-1.1.3_8.jar=lib/xpp3-1.1.3_8.jar
file.reference.xpp3_min-1.1.4c.jar=lib/xpp3_min-1.1.4c.jar
file.reference.xstream-1.3.1.jar=lib/xstream-1.3.1.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${libs.beans-binding.classpath}:\
    ${reference.PbmCommons.jar}:\
    ${file.reference.commons-logging-1.0.4.jar}:\
    ${file.reference.icu4j-3_6.jar}:\
    ${file.reference.log4j-1.2.13.jar}:\
    ${file.reference.mailapi.jar}:\
    ${file.reference.smtp.jar}:\
    ${file.reference.xpp3-1.1.3_8.jar}:\
    ${file.reference.xpp3_min-1.1.4c.jar}:\
    ${file.reference.xstream-1.3.1.jar}:\
    ${file.reference.httpclient-4.0.1.jar}:\
    ${file.reference.httpmime-4.0.1.jar}:\
    ${file.reference.apache-mime4j-0.6.jar}:\
    ${file.reference.httpcore-4.0.1.jar}:\
    ${file.reference.PbmCommons.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.processorpath=\
    ${javac.classpath}
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
# Property libs.beans-binding.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.beans-binding.classpath=../../../Program Files/NetBeans 6.0.1/java1/modules/ext/beansbinding-1.2.1.jar
main.class=client.Main
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.PbmCommons=../PbmCommons
reference.PbmCommons.jar=${project.PbmCommons}/dist/PbmCommons.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
=======
annotation.processing.enabled=true
annotation.processing.enabled.in.editor=false
annotation.processing.processors.list=
annotation.processing.run.all.processors=true
application.desc=This game is a computer moderated turn based multiplayer board game. It has strong elements from war games with a nice economical side to it. Also, it has some small pieces of RPG mixed in the bunch.\n\nThe general mechanics are quite simple. For each turn you receive a result turn with all available information. Then you spend some time thinking and communicating with your allies (if any). Then you input your commands and send them to the moderator. The moderator (or Judge) will process all commands according to the scenario turn sequencing and then distribute the results. Then we play another turn until a winner is declared or the time limit is reached.\n\nThe goal is that you should spend 10-20 minutes per week preparing you commands, after the initial learning curve is done. Some people may want to run the turns more often, but I do not recommend it for beginners.\n\nThe idea is to have a client program (the Counselor) to help both new and experienced players and to leverage knowledge. From the Counselor, all information will be made available. You can review your generals and wizards. You can check upon your assassins and your enemies' rogues if they are double agents.\n\nAn easy to view map will help you see all theatre of operations in a glance. You review the information and give your commands at your own pace as we are all busy people.\n\nThe game is quite stable and recently translated into English. It is far from finished, but we passed the initial beta and I'm looking for more players.\n\nAre you interested in having some fun while crushing your enemies?
application.homepage=http://clashlegends.com/
application.splash=
application.title=PbmCounselor
application.vendor=John Moura
auxiliary.org-netbeans-spi-editor-hints-projects.perProjectHintSettingsFile=nbproject/cfg_hints.xml
build.classes.dir=${build.dir}/classes
build.classes.excludes=**/*.java,**/*.form
# This directory is removed when the project is cleaned:
build.dir=build
build.generated.dir=${build.dir}/generated
build.generated.sources.dir=${build.dir}/generated-sources
# Only compile against the classpath explicitly listed here:
build.sysclasspath=ignore
build.test.classes.dir=${build.dir}/test/classes
build.test.results.dir=${build.dir}/test/results
debug.classpath=\
    ${run.classpath}
debug.test.classpath=\
    ${run.test.classpath}
# This directory is removed when the project is cleaned:
dist.dir=dist
dist.jar=${dist.dir}/PbmCounselor.jar
dist.javadoc.dir=${dist.dir}/javadoc
endorsed.classpath=
excludes=
file.reference.apache-mime4j-0.6.jar=lib/apache-mime4j-0.6.jar
file.reference.commons-logging-1.0.4.jar=lib/commons-logging-1.0.4.jar
file.reference.httpclient-4.0.1.jar=lib/httpclient-4.0.1.jar
file.reference.httpcore-4.0.1.jar=lib/httpcore-4.0.1.jar
file.reference.httpmime-4.0.1.jar=lib/httpmime-4.0.1.jar
file.reference.icu4j-3_6.jar=lib/icu4j-3_6.jar
file.reference.log4j-1.2.13.jar=lib/log4j-1.2.13.jar
file.reference.mailapi.jar=lib/mailapi.jar
file.reference.Projetos-PbmClient=.
file.reference.smtp.jar=lib/smtp.jar
file.reference.xpp3-1.1.3_8.jar=lib/xpp3-1.1.3_8.jar
file.reference.xpp3_min-1.1.4c.jar=lib/xpp3_min-1.1.4c.jar
file.reference.xstream-1.3.1.jar=lib/xstream-1.3.1.jar
includes=**
jar.archive.disabled=${jnlp.enabled}
jar.compress=true
jar.index=${jnlp.enabled}
javac.classpath=\
    ${libs.beans-binding.classpath}:\
    ${file.reference.log4j-1.2.13.jar}:\
    ${file.reference.commons-logging-1.0.4.jar}:\
    ${reference.PbmCommons.jar}:\
    ${reference.PbmPersistenceCommons.jar}:\
    ${file.reference.icu4j-3_6.jar}:\
    ${file.reference.mailapi.jar}:\
    ${file.reference.smtp.jar}:\
    ${file.reference.xpp3-1.1.3_8.jar}:\
    ${file.reference.xpp3_min-1.1.4c.jar}:\
    ${file.reference.xstream-1.3.1.jar}:\
    ${file.reference.httpclient-4.0.1.jar}:\
    ${file.reference.httpmime-4.0.1.jar}:\
    ${file.reference.apache-mime4j-0.6.jar}:\
    ${file.reference.httpcore-4.0.1.jar}
# Space-separated list of extra javac options
javac.compilerargs=
javac.deprecation=true
javac.processorpath=\
    ${javac.classpath}
javac.source=1.6
javac.target=1.6
javac.test.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}:\
    ${libs.junit.classpath}:\
    ${libs.junit_4.classpath}
javadoc.additionalparam=
javadoc.author=false
javadoc.encoding=${source.encoding}
javadoc.noindex=false
javadoc.nonavbar=false
javadoc.notree=false
javadoc.private=false
javadoc.splitindex=true
javadoc.use=true
javadoc.version=false
javadoc.windowtitle=
jaxbwiz.endorsed.dirs="${netbeans.home}/../ide12/modules/ext/jaxb/api"
jnlp.codebase.type=no.codebase
jnlp.descriptor=application
jnlp.enabled=false
jnlp.mixed.code=default
jnlp.offline-allowed=false
jnlp.signed=false
jnlp.signing=
jnlp.signing.alias=
jnlp.signing.keystore=
# Property libs.beans-binding.classpath is set here just to make sharing of project simpler.
# The library definition has always preference over this property.
libs.beans-binding.classpath=../../../Program Files/NetBeans 6.0.1/java1/modules/ext/beansbinding-1.2.1.jar
main.class=client.Main
# Optional override of default Codebase manifest attribute, use to prevent RIAs from being repurposed
manifest.custom.codebase=
# Optional override of default Permissions manifest attribute (supported values: sandbox, all-permissions)
manifest.custom.permissions=
manifest.file=manifest.mf
meta.inf.dir=${src.dir}/META-INF
mkdist.disabled=false
platform.active=default_platform
project.PbmCommons=../PbmCommons
project.PbmPersistenceCommons=../PbmPersistenceCommons
reference.PbmCommons.jar=${project.PbmCommons}/dist/PbmCommons.jar
reference.PbmPersistenceCommons.jar=${project.PbmPersistenceCommons}/dist/PbmPersistenceCommons.jar
run.classpath=\
    ${javac.classpath}:\
    ${build.classes.dir}
# Space-separated list of JVM arguments used when running the project
# (you may also define separate properties like run-sys-prop.name=value instead of -Dname=value
# or test-sys-prop.name=value to set system properties for unit tests):
run.jvmargs=
run.test.classpath=\
    ${javac.test.classpath}:\
    ${build.test.classes.dir}
source.encoding=UTF-8
src.dir=src
test.src.dir=test
>>>>>>> 1ee78bc01949a20863f9a3efe6bd3e1f0821f190
